@{WMS.ApiAccount role = Session["user"] as WMS.ApiAccount;}
@{
    ViewBag.Title = "Data";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="card card-custom" id="a">
    <div class=" flex-wrap py-5" style="padding: 7.25rem;">
        <!--begin::Dropdown-->
        <div class="card-toolbar">
            <form class="row" enctype="multipart/form-data">
                <button type="submit" name="submit" value="" class="btn btn-light-primary font-weight-bolder col-sm-3 col-md-3 col-lg-3 col-xl-3 col-xxl-3 my-2">
                    <span class="svg-icon svg-icon-md">

                        <!--begin::Svg Icon | path:assets/media/svg/icons/Design/PenAndRuller.svg-->
                        <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
                            <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                                <rect x="0" y="0" width="24" height="24"></rect>
                                <path d="M3,16 L5,16 C5.55228475,16 6,15.5522847 6,15 C6,14.4477153 5.55228475,14 5,14 L3,14 L3,12 L5,12 C5.55228475,12 6,11.5522847 6,11 C6,10.4477153 5.55228475,10 5,10 L3,10 L3,8 L5,8 C5.55228475,8 6,7.55228475 6,7 C6,6.44771525 5.55228475,6 5,6 L3,6 L3,4 C3,3.44771525 3.44771525,3 4,3 L10,3 C10.5522847,3 11,3.44771525 11,4 L11,19 C11,19.5522847 10.5522847,20 10,20 L4,20 C3.44771525,20 3,19.5522847 3,19 L3,16 Z" fill="#000000" opacity="0.3"></path>
                                <path d="M16,3 L19,3 C20.1045695,3 21,3.8954305 21,5 L21,15.2485298 C21,15.7329761 20.8241635,16.200956 20.5051534,16.565539 L17.8762883,19.5699562 C17.6944473,19.7777745 17.378566,19.7988332 17.1707477,19.6169922 C17.1540423,19.602375 17.1383289,19.5866616 17.1237117,19.5699562 L14.4948466,16.565539 C14.1758365,16.200956 14,15.7329761 14,15.2485298 L14,5 C14,3.8954305 14.8954305,3 16,3 Z" fill="#000000"></path>
                            </g>
                        </svg>
                        <!--end::Svg Icon-->
                    </span><a href="~/Images/Epc.xlsx" download="">@Html.DisplayName(@Resources.Resource.Mẫu)</a>
                </button>
                <div class="file-upload col-sm-6 col-md-6 col-lg-6 col-xl-6 col-xxl-6 my-2">
                    <div class="file-select">
                        <div class="file-select-button" id="fileName">@Html.DisplayName(@Resources.Resource.Chọn_file)</div>
                        <div class="file-select-name" id="noFile">@Html.DisplayName(@Resources.Resource.Không_có_file_được_chọn)...</div>
                        <input type="file" name="UploadedFile" id="chooseFile">
                    </div>
                </div>
                <button onclick="Import()" type="button" name="submit" value="" class="btn btn-light-primary font-weight-bolder col-sm-3 col-md-3 col-lg-3 col-xl-3 col-xxl-3 my-2">
                    <span class="svg-icon svg-icon-md">

                        <!--begin::Svg Icon | path:assets/media/svg/icons/Design/PenAndRuller.svg-->
                        <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
                            <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                                <rect x="0" y="0" width="24" height="24"></rect>
                                <path d="M3,16 L5,16 C5.55228475,16 6,15.5522847 6,15 C6,14.4477153 5.55228475,14 5,14 L3,14 L3,12 L5,12 C5.55228475,12 6,11.5522847 6,11 C6,10.4477153 5.55228475,10 5,10 L3,10 L3,8 L5,8 C5.55228475,8 6,7.55228475 6,7 C6,6.44771525 5.55228475,6 5,6 L3,6 L3,4 C3,3.44771525 3.44771525,3 4,3 L10,3 C10.5522847,3 11,3.44771525 11,4 L11,19 C11,19.5522847 10.5522847,20 10,20 L4,20 C3.44771525,20 3,19.5522847 3,19 L3,16 Z" fill="#000000" opacity="0.3"></path>
                                <path d="M16,3 L19,3 C20.1045695,3 21,3.8954305 21,5 L21,15.2485298 C21,15.7329761 20.8241635,16.200956 20.5051534,16.565539 L17.8762883,19.5699562 C17.6944473,19.7777745 17.378566,19.7988332 17.1707477,19.6169922 C17.1540423,19.602375 17.1383289,19.5866616 17.1237117,19.5699562 L14.4948466,16.565539 C14.1758365,16.200956 14,15.7329761 14,15.2485298 L14,5 C14,3.8954305 14.8954305,3 16,3 Z" fill="#000000"></path>
                            </g>
                        </svg>
                        <!--end::Svg Icon-->
                    </span>@Html.DisplayName(@Resources.Resource.Import)
                </button>
            </form>

        </div>
        &nbsp
    </div>
    <div class="card-body">
        <!--begin: Datatable-->
        <div id="kt_datatable_wrapper" class="dataTables_wrapper dt-bootstrap4 no-footer">
            <div class="form-group row">
                @*<label for="example-search-input" class="col-sm-1 col-md-2 col-lg-2 col-xl-2 col-xxl-2 col-form-label"></label>*@
                <div class="col-sm-12 col-md-12 col-lg-12 col-xl-12 col-xxl-12" style="height: 500px;overflow-y: scroll;">
                    <div class="input-group ">
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <input type="number" class="form-control" placeholder="@Html.DisplayName(@Resources.Resource.Số_Lượng)" id="amount">
                            </div>
                            <select class="form-control select2" id="kt_select2_1" name="seachidgood">
                            </select>
                        </div>
                    </div>
                    <table class="table table-separate table-head-custom table-checkable dataTable no-footer dtr-inline" id="kt_datatable" role="grid" aria-describedby="kt_datatable_info" style="width: 1234px;">
                        <thead>
                            <tr role="row">
                                <th class="sorting" tabindex="0" aria-controls="kt_datatable" rowspan="1" colspan="1" style="width: 190px;" aria-label="Company Email: activate to sort column ascending">@Html.DisplayName(@Resources.Resource.STT)</th>
                                <th class="sorting" tabindex="0" aria-controls="kt_datatable" rowspan="1" colspan="1" style="width: 190px;" aria-label="Company Email: activate to sort column ascending">@Html.DisplayName(@Resources.Resource.Mã)</th>
                                <th class="sorting" tabindex="0" aria-controls="kt_datatable" rowspan="1" colspan="1" style="width: 190px;" aria-label="Company Email: activate to sort column ascending">EPC</th>
                            </tr>
                        </thead>
                        <tbody id="tbd">
                        </tbody>
                    </table>

                </div>
                <div style=" width:100%;" id="divResult"><p style="text-align: center; transform: translateY(45%); " id="result">@Html.DisplayName(@Resources.Resource.Kết_Quả)</p></div>
                <button type="submit" class="btn btn-success mr-2 mc33" style="display:none" onclick="MC33()">@Html.DisplayName(@Resources.Resource.Bắt_Đầu_Quét_RFID)</button>
                <button type="submit" class="btn btn-success mr-2 on" onclick="RFID()">@Html.DisplayName(@Resources.Resource.Bắt_Đầu_Quét_RFID)</button>
                <button type="submit" class="btn btn-secondary mr-2 mc33off" style="display:none" onclick=" StopMC33()">@Html.DisplayName(@Resources.Resource.Dừng_Quét_RFID)</button>
                <button type="submit" class="btn btn-secondary mr-2 off" style="display:none" onclick=" Stop()">@Html.DisplayName(@Resources.Resource.Dừng_Quét_RFID)</button>
                <button type="submit" class="btn btn-primary mr-2" onclick="Add()">@Html.DisplayName(@Resources.Resource.Lưu)</button>
                <a href="/FunctionOrder/CardRecognition" class="btn btn-danger mr-2">@Html.DisplayName(@Resources.Resource.Tải_Lại)</a>
            </div>
        </div>
    </div>

</div>
@*modal tim kiem*@
<div class="modal fade show" style="z-index:1061" id="location" data-backdrop="static" tabindex="-1" role="dialog" aria-labelledby="staticBackdrop" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-xl" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">@Resources.Resource.Chi_Tiết_Kho_Hàng</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <i aria-hidden="true" class="ki ki-close"></i>
                </button>
            </div>
            <div class="modal-body" style=" overflow-y: scroll;">
                <div class="card card-custom">
                    <div class="card-header">
                        <h3 class="card-title">
                            @Resources.Resource.Tìm_Kiếm_Mã_EPC
                        </h3>
                    </div>
                    <div class="card-body">
                        <div class="row mb-3 form-group">
                            <label class="col-xl-2 col-lg-2 col-form-label">@Resources.Resource.Mã_EPC</label>
                            <div class="col-8">
                                <div class="input-group-prepend">
                                    <input id="idEPC" class="form-control" type="text" />
                                </div>
                            </div>
                        </div>
                        <div style="display: flex; justify-content: center; align-items: center;">
                            <div class="row mb-3 form-group" style="position: relative;">
                                <canvas id="rfidLocateCanvas" width="100" height="250" style="z-index: 1;"></canvas>
                                <div id="borderFrame" style="position: absolute; top: 0; left: 0; width: 100px; height: 250px; border: 1px solid #000; z-index: 0;"></div>
                            </div>
                        </div>
                        <div style="display: flex; justify-content: center; align-items: center; margin-bottom: 10px;">
                            <label class="checkbox checkbox-inline checkbox-primary flex-shrink-0 mr-3">
                                <input type="checkbox" id="beep">
                                <span></span>
                            </label>
                            <div class="font-weight-bolder mr-2">@Resources.Resource.Bật_Âm_Thanh</div>
                            <div class="mr-4 flex-shrink-0 text-center" style="width: 40px;">
                                <i class="icon-2x text-dark-50 flaticon-sound"></i>
                            </div>
                        </div>

                        <div style="display: flex; justify-content: center; align-items: center;">
                            <button type="submit" class="btn btn-success mr-2" onclick="TagLocate()">@Resources.Resource.Tìm_Kiếm</button>
                            <button type="submit" class="btn btn-success mr-2" onclick="cancelLocate()">@Resources.Resource.Dừng</button>
                        </div>
                    </div>
                    <div id="trigger">
                    </div>
                    <div id="display">
                        RFID Data: <br>
                        Time: <br>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-light-primary font-weight-bold" data-dismiss="modal">@Resources.Resource.Đóng</button>
            </div>
        </div>
    </div>
</div>
@section scripts{
    <script src="~/Scripts/ebapi-modules.js"></script>
    <script src="~/Scripts/elements.js"></script>
    <script>
        var epcshow = []
        var errorEPC = []
        function Import() {
            try {
                let fileUpload = $('input[name="UploadedFile"]').get(0);
                let files = fileUpload.files;
                let formdata = new FormData();
                formdata.append('file', files[0]);
                $.ajax({
                    type: 'post',
                    url: '/Epcs/Upload',
                    contentType: false,
                    processData: false,
                    data: formdata,
                    success: function (data) {
                        if (data.code == 200) {
                            Swal.fire(data.msg, "@Html.DisplayName(@Resources.Resource.Thành_Công)!", "success");
                        } else {
                            Swal.fire(data.msg.join("\n"), "@Html.DisplayName(@Resources.Resource.error)!", "error");
                        }

                    }
                })
            } catch (error) {
                Swal.fire(error.message, "", "error")
            }
        }
        $('#chooseFile').bind('change', function () {
            var filename = $("#chooseFile").val();
            if (/^\s*$/.test(filename)) {
                $(".file-upload").removeClass('active'); $("#noFile").empty()
                $("#noFile").append("@Html.DisplayName(@Resources.Resource.Không_có_file_được_chọn)...");
            }
            else {
                $(".file-upload").addClass('active');
                $("#noFile").text(filename.replace("C:\\fakepath\\", ""));
            }
        });

        Goods(1);
        //load code goods
        function Goods(page) {
            $.ajax({
                url: '/Goods/List',
                type: 'get',
                data: { pagenum: 50, page: page, seach: "" },
                success: function (data) {
                    if (data.code == 200) {
                        $.each(data.c, function (k, v) {
                            var option = `<option value="${v.id}">${v.name}(${v.id})</option>`
                            $('select[name="seachidgood"]').append(option)
                        })
                        if (page < data.pages) {
                            page++
                            Goods(page)
                        }
                    } else (
                        alert(data.msg)
                    )
                }
            })
        }
        var start;
        //start scanner
        function RFID() {
            let id = $('select[name="seachidgood"]').val()
            let amount = $('#amount').val().trim()
            if (id == -1) {
                Swal.fire("@Html.DisplayName(@Resources.Resource.Chưa_Chọn_Hàng_Hóa)", "@Html.DisplayName(@Resources.Resource.Nhấn_Nút)!", "warning"); $('select[name="seachidgood"]').css('border-color', "red"); return;
            } else {
                $('select[name="seachidgood"]').css('border-color', "green");
            }
            if (amount.length == 0) {
                Swal.fire("@Html.DisplayName(@Resources.Resource.Chưa_Nhập_Số_Lượng_Quét)", "@Html.DisplayName(@Resources.Resource.Nhấn_Nút)!", "warning"); $('#amount').css('border-color', "red"); return;
            } else {
                $('#amount').css('border-color', "green");
            }
            DeleteEPC()
            $('.on').css('display', 'none')
            $('.off').css('display', 'block')
            start = setInterval(function () { AllShowEPC() }, 100);
        }

        //stop scanner
        function Stop() {
            $('.on').css('display', 'block')
            $('.off').css('display', 'none')
            clearInterval(start);
        }
        function AllShowEPC() {
            let id = $('select[name="seachidgood"]').val()
            $.ajax({
                url: '/rfid/AllShowEPC',
                type: 'get',
                success: function (data) {
                    if (data.code == 200) {
                        $.each(data.a, function (k, v) {
                            $.ajax({
                                url: '/rfid/falseEPC',
                                type: 'post',
                                data: { epc: v.id },
                                success: function (data) {
                                    if (data.code == 200) {
                                        if (!epcshow.some(item => item.IdEPC === v.id)) {
                                            epcshow.push({
                                                IdEPC: v.id,
                                                IdGoods: id
                                            })
                                            table(v.id)
                                        }
                                    }
                                }
                            })
                        })
                    }
                }
            })
        }
        //set table readable  data
        const table = async (epc) => {
            await CheckIdGoodsInSystem(epc)
                .then(function (data) {
                    let id = $('select[name="seachidgood"]').val()
                    var stt = $('#tbd tr').length
                    let tbd = '<tr id="' + epc + '">'
                    tbd += '<td>' + (stt + 1) + '</td>';
                    tbd += '<td>' + id + '</td>';
                    tbd += '<td>' + epc + '</td><';
                    $('#tbd').append(tbd)
                    checkAmount()
                    if (data?.status) {

                    } else {
                        errorEPC.push(
                            epc
                        );
                    }
                })

        }

        //check amount get result
        const checkAmount = () => {
            let amount = $('#amount').val().trim()
            var amountCheck = Number(amount)
            var stt = $('#tbd tr').length
            if (stt == 0) {
                CheckAndChange("@Html.DisplayName(@Resources.Resource.Kết_Quả)", "white")
            } else if (stt < amountCheck) {
                CheckAndChange("@Html.DisplayName(@Resources.Resource.Thiếu)", "red")
            } else if (stt == amountCheck) {
                CheckAndChange("@Html.DisplayName(@Resources.Resource.Đủ)", "green")
            } else if (stt > amountCheck) {
                CheckAndChange("@Html.DisplayName(@Resources.Resource.Dư)", "yellow")
            }
        }

        //function change result
        function CheckAndChange(result, divResult) {
            $('#result').text(result)
            $('#divResult').css("background", divResult)
        }

        function CheckIdGoodsInSystem(epc) {
            return new Promise(function (resolve, reject) {
                $.ajax({
                    url: '/Epcs/CheckIdGoodsInSystem',
                    type: 'get',
                    data: { epc },
                    success: function (data) {
                        if (data.code == 200) {
                            resolve(data);
                        }
                        else {
                            toastr.error(data.msg)
                            reject(data.msg);
                        }
                    },
                    error: function (xhr, status, error) {
                        reject(error);
                    }
                });
            });
        }
        //save
        const Add = () => {
            Stop()
            if (errorEPC.length > 0) {

                  var er = `<table>
                              <thead>
                                  <tr>
                                      <th>@Html.DisplayName(@Resources.Resource.Các_Mã_Trùng)</th>
                                      <th>@Html.DisplayName(@Resources.Resource.Tìm_Kiếm)</th>
                                      <th>@Html.DisplayName(@Resources.Resource.Xóa)</th>
                                  </tr>
                              </thead>
                              <tbody>`
                $.each(errorEPC, function (k, v) {
                      er += `<tr>
                                  <td>${v}</td>
                                  <td style="cursor: pointer;" name="location" id="location${v}"><i class="nav-icon la la-search"></i></td>
                                  <td style="cursor: pointer;" name="deleteCoincide" id="deleteCoincide${v}"><i class="icon-2x text-dark-50 flaticon-delete-1"></i></td>
                             </tr>`
                  })
                er += `</tbody></table>`
                      Swal.fire({
                        title:"@Html.DisplayName(@Resources.Resource.Đã_Tồn_Tại__Có_Mã_EPC_Là)",
                        icon: "warning",
                        html: er,
                        showDenyButton: true,
                        showCancelButton: true,
                        confirmButtonText: "@Html.DisplayName(@Resources.Resource.Thành_Công)",
                        denyButtonText: "@Html.DisplayName(@Resources.Resource.Xóa_Toàn_Bộ_Mã_Trùng)",
                        cancelButtonText: "@Html.DisplayName(@Resources.Resource.Hủy)"
                    }).then((result) => {
                        if (result.isConfirmed) {

                        } else if (result.isDenied) {
                            var arrayEpcRemove = $('td[name="deleteCoincide"]').map(function () {
                                return this.id.substring(14)
                            }).get()
                            $.each(arrayEpcRemove, function (k,v) {
                                LoadListData(v)
                            })
                        }
                    })
                    SetReponsive()
                    return;
            }
            let amountTr = $('#tbd tr').length
            let amount = $('#amount').val().trim()
            if (amount != amountTr) {
                Swal.fire("@Html.DisplayName(@Resources.Resource.Không_Đạt_Yêu_Cầu)", "@Html.DisplayName(@Resources.Resource.Nhấn_Nút)", "warning");
                EmptyTable()
                return;
            }
            let id = $('select[name="seachidgood"]').val();
            if (id == -1) {
                Swal.fire("@Html.DisplayName(@Resources.Resource.Chưa_Chọn_Hàng_Hóa)", "@Html.DisplayName(@Resources.Resource.Nhấn_Nút)", "warning");
                EmptyTable()
                return;
            }
            if (amount.length == 0) {
                 Swal.fire("@Html.DisplayName(@Resources.Resource.Chưa_Nhập_Số_Lượng_Quét)", "@Html.DisplayName(@Resources.Resource.Nhấn_Nút)", "warning");
                EmptyTable()
                return;
            }
            var epc = JSON.stringify(epcshow)
                $.ajax({
                    url: '/Epcs/Epc',
                    type: 'post',
                    data: {
                       epc
                    },
                    success: function (data) {
                        if (data.code == 200) {
                            toastr.success(data.msg)
                            setTimeout(function () { window.location.reload() }, 1000);
                        } else {   Swal.fire(data.msg, "@Html.DisplayName(@Resources.Resource.Nhấn_Nút)", "error"); }
                    }
                })
            EmptyTable()

        }
        $(document).on('click', 'td[name="deleteCoincide"]', function () {
            var id = $(this).attr('id').substring(14);
            LoadListData(id)
        })
        //Xoa mã Trùng
        function LoadListData(id) {
            errorEPC = errorEPC.filter(item => item !== id);
            epcshow = epcshow.filter(item => item.IdEPC !== id);
            $('#deleteCoincide' + id + '').closest('tr').remove()
            $('#' + id + '').remove()
            SetReponsive()
            checkAmount()
        }
        $(document).on('keyup', '#amount', function () {
             checkAmount()
         })
        function MC33() {
            rfid.tagEvent = "TagHandler(%json)";
            RFIDEnumrate()
        }

        //read
        function TagHandler(tagarray) {
            let id = $('select[name="seachidgood"]').val()
            for (i = 0; i < tagarray.TagData.length; i++) {
                var epc = tagarray.TagData[i].tagID
                if (!epcshow.some(item => item.IdEPC === epc)) {
                    epcshow.push({
                        IdEPC: epc,
                        IdGoods: id
                    })
                    table(epc)
                }
            }
        }

        var startmc33;
        //connect Handler
        function RFIDEnumrate() {

            rfid.transport = 'serial';
            rfid.readerID = 'RFID1';

            rfid.enumerate();
            setTimeout(function () {
                rfid.connect();
            }, 1000);
            startmc33 = setInterval(function () {
                rfid.performInventory()
            },1000)
        }

        function StopMC33() {
            clearInterval(startmc33);
            rfid.stop();
            rfid.disconnect();
        }
        SetReponsive()

        function EmptyTable() {
            $('#tbd').empty()
            CheckAndChange("@Html.DisplayName(@Resources.Resource.Kết_Quả)", "white")
            epcshow = [];
            SetReponsive()
        }
        function SetReponsive() {
            if ($(window).width() < 1200) {
                $('.card-header.flex-wrap.py-5 .card-toolbar').css("display", "none")
                $('.btn.btn-success.mr-2.on').css("display", "none")
                $('.btn.btn-success.mr-2.mc33').css("display", "block")
                $('.btn.btn-secondary.mr-2.mc33off').css("display", "block")
            } else {

            }
        }
        function DeleteEPC() {
            $.ajax({
                url: '/rfid/DeleteEPC',
                type: 'post',
            })
        }
    </script>
    
    <script type="text/javascript">
        var displayStr = "";
        var tagCount = 0;
        var readstate = false;
        var triggervalue;
        var lasttag = 0;
        var scanning = false;
        var tstate = false;
        var istate = false;
        var clocate = false;
        var MAX_DISTANCE = 100;
        var prefilter;
       /* var currentIdEPC = ""; // Biến toàn cục để lưu trữ giá trị idEPC*/
        $(document).on('click', 'td[name="location"]', function () {
            var epc = $(this).attr('id').substring(8)
            $('#location').modal('show');
            $('#idEPC').val(epc)
            LoadListData(epc)
            startIntentListener()
        });
      
        function rfidEnumerate() {
            // selece usb or bluetooth for RFD connection
            rfid.transport = "serial";
            rfid.enumerate();
        }
        function rfidConnect() {
            rfid.readerID = "RFID1";

            rfid.connect();
            rfid.reportUniqueTags = 1;

            rfid.stopTriggerType = "triggerRelease";
        }

        function rfidDisConnect() {
            rfid.disconnect();
        }

        function sleep(milliseconds) {
            const date = Date.now();
            let currentDate = null;
            do {
                currentDate = Date.now();
            } while (currentDate - date < milliseconds);
        }

        function TagLocate() {
            clocate = false;
            document.getElementById("display").innerHTML = "@Resources.Resource.Bắt_Đầu_Định_Vị_Thẻ";

            // Lấy giá trị idepc từ input
            var idepc = document.getElementById('idEPC').value;

            rfid.tagEvent = "TagLocater(%json)";
            rfid.antennaSelected = 1;
            rfid.tagID = idepc; // Sử dụng giá trị idepc từ input
            rfid.locateTag();
        }

        function TagLocater(tagarray) {

            // Lấy giá trị cự ly từ mảng tagarray
            const distance = tagarray.TagLocate;

            // Tính phần trăm dựa trên cự ly và giới hạn giá trị trong khoảng 0-100
            var percentage = Math.max(0, Math.min((distance / MAX_DISTANCE) * 100, 100));

            // bat tieng Beep khi checkbox được bật
            if (document.getElementById('beep').checked) {
                if (distance > 90)
                    EB.Notification.beep({ 'frequency': 1200, 'volume': 3, 'duration': 20 });
                else if (distance > 70)
                    EB.Notification.beep({ 'frequency': 900, 'volume': 3, 'duration': 20 });
                else if (distance > 50)
                    EB.Notification.beep({ 'frequency': 600, 'volume': 3, 'duration': 20 });
            }
            EB.Notification.vibrate(100);

            // Gọi hàm để vẽ thanh màu trên canvas dựa trên phần trăm
            drawLocateBar(percentage);
        }

        function cancelLocate() {
            clocate = false;
            rfidStopClear();
            document.getElementById("display").innerHTML = "@Resources.Resource.Kết_Thúc_Định_Vị_Thẻ";
        }

        function rfidStopClear() {
            rfid.stop();
            displayStr = "";

        }
        // RFID Status Event Handler
        function statusEvent(eventInfo) {
            if (eventInfo.vendorMessage == "INVENTORY_STOP_EVENT") {
                displayStr = "";
                tagCount = 0;
            }
            else {

                if (eventInfo.vendorMessage.startsWith("CONNECT"))
                    document.getElementById("trigger").innerHTML = '<p style="color:green;">Connection Status:<b> CONNECTED</b></p>';
                else
                    if (eventInfo.vendorMessage.startsWith("DISCONNECT")) {
                        document.getElementById("trigger").innerHTML = '<p style="color:red;">Connection Status:<b> DISCONNECTED</b></p>';
                        document.getElementById("display").innerHTML = "";
                    }
                    else
                        if (eventInfo.vendorMessage.startsWith("Reader"))
                            document.getElementById("trigger").innerHTML = '<p style="color:orange;">Connection Status:<b> ' + eventInfo.vendorMessage + eventInfo.method + eventInfo.errorCode+ '</b></p>';
                        else
                            document.getElementById("trigger").innerHTML = eventInfo.vendorMessage;


                if (eventInfo.vendorMessage.startsWith("HANDHELD_TRIGGER") && (scanning == true)) {
                    if (tstate == true) {
                        // trigger release
                        tstate = false;
                    }
                    else {
                        // trigger press
                        tstate = true;
                    }
                }
            }
        }

        function startIntentListener() {

            // define tag event handlers
            rfid.statusEvent = "statusEvent(%json)";
            rfid.tagEvent = "TagHandler(%json)";
            rfid.enableTagRSSI = true;

            // get connected reader details
            rfidEnumerate();

            // ensure current connection is reset
            rfidDisConnect();

            // delay for enumerate to complete
            sleep(2000);

            // connect to reader
            rfidConnect();
        }

        // canvas
        function drawLocateBar(percentage) {

            const canvas = document.getElementById('rfidLocateCanvas');
            const ctx = canvas.getContext('2d');

            // Tạo Gradient từ trên xuống dưới
            const gradient = ctx.createLinearGradient(0, 0, 0, canvas.height);
            gradient.addColorStop(0, 'rgba(255, 0, 0, 1)');

            // Áp dụng Gradient cho ngữ cảnh fillStyle của Canvas
            ctx.fillStyle = gradient;

            // Tính toán chiều cao dựa trên phần trăm
            const barHeight = canvas.height * (percentage / 100);

            // Vẽ hình chữ nhật sử dụng Gradient
            ctx.clearRect(0, 0, canvas.width, canvas.height);
            ctx.fillRect(0, canvas.height - barHeight, canvas.width, barHeight);

            // Hiển thị phần trăm trên thanh
            ctx.fillStyle = 'black';
            ctx.font = '12px Arial';

            // Tính toán vị trí dọc của chữ số để đảm bảo nằm chính giữa
            const textY = canvas.height - barHeight + (barHeight / 2) + 6;

            // Tính toán chiều rộng của chữ số để căn giữa
            const textWidth = ctx.measureText(percentage + '%').width;
            const textX = (canvas.width - textWidth) / 2;

            ctx.fillText(percentage + '%', textX, textY);
        }
    </script>
    <script src="~/assets/js/pages/crud/forms/widgets/select2.js"></script>

}


